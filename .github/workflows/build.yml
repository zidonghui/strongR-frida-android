name: strongR-frida

on: 
  schedule:
    - cron: "0 9/12 * * *"
  issues:
    types: [opened]
  label:
    types: [created]
  workflow_dispatch:
  
jobs:
  check_version:
    runs-on: ubuntu-20.04
    
    outputs:
      FRIDA_VERSION: ${{ steps.pullFridaLatestRelease.outputs.FRIDA_VERSION }}
      ALREADY_RELEASE: ${{ steps.checkReleaseVersion.outputs.ALREADY_RELEASE }}
      ISSUE_NUMBER: ${{ steps.pullIssuesVersion.outputs.ISSUE_NUMBER }}
    steps:
      - name: Check repo's version issues
        id: pullIssuesVersion
        uses: actions/github-script@v3.1.0
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const issuesResponse = await github.issues.listForRepo({
                owner: '${{ secrets.GIT_OWNER }}',
                repo: '${{ secrets.GIT_REPO }}',
                state: "open",
                labels: "version",
                sort: "created",
                direction: "desc",
                per_page: 1
            })
            let ver
            let issue_number = -1
            if (Array.isArray(issuesResponse["data"]) && issuesResponse["data"].length) {
              let title = issuesResponse["data"][0]["title"]
              let start = 0
              if (title.includes("[VERSION]")){
                  start = 9
              }
              ver = issuesResponse["data"][0]["title"].substring(start).trim()
              issue_number = issuesResponse["data"][0]["number"]
            }
            console.log("Frida Version from issues is ", ver)
            core.setOutput('FRIDA_VERSION', ver)
            core.setOutput('ISSUE_NUMBER', issue_number)
      - name: Pull Frida Latest Release
        id: pullFridaLatestRelease
        uses: actions/github-script@v3.1.0
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const releaseVersion = '${{ steps.pullIssuesVersion.outputs.FRIDA_VERSION }}'
            if (releaseVersion){
              console.log("Frida Version From Issues is ", releaseVersion)
              core.setOutput('FRIDA_VERSION', releaseVersion);
            } else {
              const releaseResponse = await github.repos.getLatestRelease({
                owner: 'frida',
                repo: 'frida',
              })
              const {
                data: { tag_name: ver }
              } = releaseResponse;
              console.log("Frida Version From Frida repo LastRelease is ", ver)
              core.setOutput('FRIDA_VERSION', ver);
            }
            
      - name: Check release version
        id: checkReleaseVersion
        uses: actions/github-script@v3.1.0
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            try {
              const releaseVersion = '${{ steps.pullFridaLatestRelease.outputs.FRIDA_VERSION }}'
              const releaseResponse = await github.repos.getReleaseByTag({
                owner: '${{ secrets.GIT_OWNER }}',
                repo: '${{ secrets.GIT_REPO }}',
                tag: releaseVersion
              });
              const {
                data: { tag_name: ver }
              } = releaseResponse;
              if (ver == '${{ steps.pullFridaLatestRelease.outputs.FRIDA_VERSION }}'){
                  core.setOutput('ALREADY_RELEASE', '1');
              }
              else{
                  core.setOutput('ALREADY_RELEASE', '0');
              }
            } catch (e) {
              if(e.message == 'Not Found'){
                core.setOutput('ALREADY_RELEASE', '0');
              }
              else{
                core.setFailed(e.message);
              }
            }
            if (${{ steps.pullIssuesVersion.outputs.ISSUE_NUMBER }} > 0){
              const issuesComment = await github.issues.createComment({
                  owner: '${{ secrets.GIT_OWNER }}',
                  repo: '${{ secrets.GIT_REPO }}',
                  issue_number: ${{ steps.pullIssuesVersion.outputs.ISSUE_NUMBER }},
                  body: '构建进展 [https://github.com/anjia0532/strongR-frida-android/actions/runs/${{ github.run_id }}](https://github.com/anjia0532/strongR-frida-android/actions/runs/${{ github.run_id }})\n\n知识星球:\n\n <img src = https://raw.githubusercontent.com/anjia0532/strongR-frida-android/main/img/zsxq.jpg width=300px />'
              });
              console.log("create issues comment resp:",issuesComment["status"])
            }
  create_release:
    needs: check_version
    runs-on: ubuntu-20.04
    if: needs.check_version.outputs.ALREADY_RELEASE == '0'

    steps:
      - uses: actions/create-release@master
        id: createRelease
        name: Create Runner Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "${{ needs.check_version.outputs.FRIDA_VERSION }}"
          release_name: "${{ needs.check_version.outputs.FRIDA_VERSION }}"
          prerelease: false
          body: "[Frida ${{ needs.check_version.outputs.FRIDA_VERSION }}](https://github.com/frida/frida/releases/tag/${{ needs.check_version.outputs.FRIDA_VERSION }})\n\n知识星球:\n\n <img src= https://raw.githubusercontent.com/anjia0532/strongR-frida-android/main/img/zsxq.jpg width=300px />"

  android_build:
    runs-on: ubuntu-20.04
    needs: [check_version, create_release]

    steps:
    - uses: actions/checkout@v2.3.4

    - uses: actions/setup-node@v2.1.4
      with:
        node-version: '10'
    
#     - uses: fusion-engineering/setup-git-credentials@v2
#       with:
#         credentials: ${{secrets.GIT_CREDENTIALS}}
    
    - name: set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Setup Android NDK
      id: setup-ndk
      uses: nttld/setup-ndk@v1.0.3
      with:
        ndk-version: r22

    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: install dependencies
      run: |
        sudo apt-get update && DEBIAN_FRONTEND=noninteractive sudo apt-get install build-essential tree ninja-build gcc-multilib g++-multilib lib32stdc++-9-dev flex bison xz-utils ruby ruby-dev python3-requests python3-setuptools python3-dev python3-pip libc6-dev libc6-dev-i386 -y
        sudo gem install fpm -v 1.11.0 --no-document
        python3 -m pip install lief
      
    - name: build frida for Android
      shell: bash
      run: |
        git config --global user.name "${{ secrets.GIT_NAME }}"
        git config --global user.email "${{ secrets.GIT_EMAIL }}"
        git clone ${{ secrets.PATCH_REPO }}
        export ANDROID_NDK_ROOT=${{ steps.setup-ndk.outputs.ndk-path }}
        git clone --recurse-submodules https://github.com/frida/frida
        cd frida/frida-core
        git am ../../Patchs/strongR-frida/frida-core/*.patch
        cd ../
        make core-android-arm
        make core-android-arm64
        make core-android-x86
        make core-android-x86_64
        
    - name: Check release version
      id: checkReleaseVersion
      uses: actions/github-script@v3.1.0
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          try {
            const releaseVersion = '${{ needs.check_version.outputs.FRIDA_VERSION }}'
            const releaseResponse = await github.repos.getReleaseByTag({
              owner: '${{ secrets.GIT_OWNER }}',
              repo: '${{ secrets.GIT_REPO }}',
              tag: releaseVersion
            })
            const {
              data: { id: releaseId, html_url: htmlUrl, upload_url: uploadUrl }
            } = releaseResponse;
            core.setOutput('id', releaseId);
            core.setOutput('html_url', htmlUrl);
            core.setOutput('upload_url', uploadUrl);
            core.setOutput('version', releaseVersion);
          } catch (e) {
            core.setFailed(e.message);
          }
          
    - name: Upload android arm frida-server for strongR-frida
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: '${{ steps.checkReleaseVersion.outputs.upload_url }}'
        asset_path: '${{ github.workspace }}/frida/build/frida-android-arm/bin/frida-server'
        asset_name: 'hluda-server-${{ needs.check_version.outputs.FRIDA_VERSION }}-android-arm'
        asset_content_type: application/octet-stream
  
    - name: Upload android arm64 frida-server for strongR-frida
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: '${{ steps.checkReleaseVersion.outputs.upload_url }}'
        asset_path: '${{ github.workspace }}/frida/build/frida-android-arm64/bin/frida-server'
        asset_name: 'hluda-server-${{ needs.check_version.outputs.FRIDA_VERSION }}-android-arm64'
        asset_content_type: application/octet-stream
    
    - name: Upload android x86 frida-server for strongR-frida
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: '${{ steps.checkReleaseVersion.outputs.upload_url }}'
        asset_path: '${{ github.workspace }}/frida/build/frida-android-x86/bin/frida-server'
        asset_name: 'hluda-server-${{ needs.check_version.outputs.FRIDA_VERSION }}-android-x86'
        asset_content_type: application/octet-stream
        
    - name: Upload android x86_64 frida-server for strongR-frida
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: '${{ steps.checkReleaseVersion.outputs.upload_url }}'
        asset_path: '${{ github.workspace }}/frida/build/frida-android-x86_64/bin/frida-server'
        asset_name: 'hluda-server-${{ needs.check_version.outputs.FRIDA_VERSION }}-android-x86_64'
        asset_content_type: application/octet-stream


    - name: Close Version Issues
      id: closeVersionIssues
      uses: actions/github-script@v3.1.0
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          try {
            if (${{ needs.check_version.outputs.ISSUE_NUMBER }} > 0){
              const issuesResponse =  await github.issues.update({
                owner: '${{ secrets.GIT_OWNER }}',
                repo: '${{ secrets.GIT_REPO }}',
                issue_number: ${{ needs.check_version.outputs.ISSUE_NUMBER }},
                state: 'closed'
              })
              console.log("update issues resp:", issuesResponse["status"] == 200 ? "success" : "failed" )
              const issuesComment = await github.issues.createComment({
                  owner: '${{ secrets.GIT_OWNER }}',
                  repo: '${{ secrets.GIT_REPO }}',
                  issue_number: ${{ needs.check_version.outputs.ISSUE_NUMBER }},
                  body: '构建结果 [https://github.com/${{ secrets.GIT_OWNER }}/${{ secrets.GIT_REPO }}/releases/tag/${{ needs.check_version.outputs.FRIDA_VERSION }}](https://github.com/${{ secrets.GIT_OWNER }}/${{ secrets.GIT_REPO }}/releases/tag/${{ needs.check_version.outputs.FRIDA_VERSION }})<br/>\n知识星球::\n\n <img src = https://raw.githubusercontent.com/anjia0532/strongR-frida-android/main/img/zsxq.jpg width=300px />'
              });
              console.log("create issues comment resp:", issuesComment["status"] == 201 ? "success" : "failed" )
            }
          } catch (e) {
            core.setFailed(e.message);
          }
